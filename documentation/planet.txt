Planet surface
	⁃	planet object:
	⁃	May have atmosphere
	⁃	May have surface
	⁃	Gravity
	⁃	Magnetic field 

Surface:
	⁃	regions
	⁃	Points
	⁃	Scale (relates to converting travel space to lat/long, essentially radius)

Region:
	⁃	has list of borders 
	⁃	Border specifies next region, start end in lat/long
	⁃	Static
	⁃	Has attributes - travers able, resources etc

Point
	⁃	has lat, long
	⁃	Has attached object (vehicle, colony)
	⁃	Has velocity


Then detect border traversal
Check whole surface covered
Work out how to render

Add mission planning & pathing


Pathing:
	⁃	given start & end lat/long
	⁃	Can compute heading, distance
	⁃	Then travel time from v
	⁃	Then time evolve - given time delta, use v to find angular distance
	⁃	Then compute waypoint for new lat long

Rendering:
	⁃	perhaps ray tracing - works ok for spheres. Find intersection of ray. Then just compute owning region.
	⁃	Start with photon source - eg point source, or diffuse
	⁃	Then give random trajectory
	⁃	Compute intersections
	⁃	Reflect/scatter, colour
	⁃	Compute intersection with screen 
	⁃	Histogram
	⁃	Points may be trickier. Prob do as sprites.
	⁃	

Will need:
	⁃	Region for point function
	⁃	Algorithm to check region coverage
	⁃	Algorithm to convert point sprite location from lat long to screen coords 


Lean heavily on resources:
http://www.movable-type.co.uk/scripts/latlong.html
http://www.movable-type.co.uk/scripts/latlong-vectors.html#intersection

Paths:
- I think we need a convention for this. We specify paths by a pair of points - however, by itself this isn't
  sufficient to determine what the path is, because we could be going either way around the great circle to hit 
  those two points.
  I think the following should be OK:
  - From p1: If p2 long > p1 long, bear N/NE/E/SE
    Otherwise, bear S/SW/W/NW 
  - But how to describe this mathematically?
  - Or would it be easier just to store a bearing in the path?
  - No - I think we should assume we always travel east from p1 regardless. 
  - No need to figure about bearings
  - Do need to consider edge case of meridian - I think always travel north from p1. 
  - This has a special case of a path crossing south pole from same starting and end latitude - not possible to 
  specify this.